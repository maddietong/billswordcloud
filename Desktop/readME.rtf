{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red255\green255\blue255;\red27\green31\blue34;
\red10\green77\blue204;\red244\green246\blue249;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx720\pardeftab720\sl360\partightenfactor0

\f0\b\fs36 \cf2 \cb3 Bill\'92s Word Cloud
\f1\b0\fs32 \

\fs28 This simple app allows the user to select any one of William Shakespeare\'92s plays, and then select any one act within that play. Once they\'92ve made their selections, the code will generate a simple word cloud showing the words most frequently used in that play/act combination. The question I\'92m answering is, simply, \'93how can we see the variance of frequently used words between plays and acts across Shakespeare\'92s \cf4 \cb1 oeuvre\cf2 \cb3 ?\'94 This visualization could serve as a starting point for theories, deductions, and perhaps more questions about the way in which Shakespeare crafted his work.\
\

\f0\b\fs32 Overview
\f1\b0\fs28 \
I accomplished this word cloud by first finding a dataset of Shakespeare\'92s complete works. I located the dataset on Kaggle, here: {\field{\*\fldinst{HYPERLINK "https://www.kaggle.com/kingburrito666/shakespeare-plays"}}{\fldrslt https://www.kaggle.com/kingburrito666/shakespeare-plays}} and also included the data as a CSV file in my repository as: {\field{\*\fldinst{HYPERLINK "https://github.com/maddietong/billswordcloud/blob/4561370e516205723a822edbe2495641aae9d535/Documents/Shakespeare_data.csv"}}{\fldrslt \cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Shakespeare_data.csv}}
\fs32 \

\fs28 I chose to use the plays only from this dataset (though Shakespeare\'92s complete works contains other pieces), and visualize the final product as a wordcloud. Unlike some other projects, I assume, this is an interactive, and so analysis of the data is conducted based on user input.\

\fs32 \

\f0\b Get Started
\fs28 \

\f1\b0 I created this project solely in Jupyter Notebook, so you will need Anaconda installed in order to run my project. You will also need to install the word cloud module. You can find instructions here: {\field{\*\fldinst{HYPERLINK "https://github.com/amueller/word_cloud/commit/34c5828532e9d3d745b2b1b3b92717de6d19dc0f"}}{\fldrslt https://github.com/amueller/word_cloud/commit/34c5828532e9d3d745b2b1b3b92717de6d19dc0f}}
\fs32 \

\fs28 I simply ran `sudo pip install wordcloud` from the command line. \
\
\pard\tx720\pardeftab720\sl360\partightenfactor0

\b\fs32 \cf4 \cb1 Process and Project Requirement Fulfillment 
\fs28 \

\b0 I read the Shakespeare_data.csv file into Jupyter Notebook, and created a sqlite database called \'93shakespeares_works.db\'94. The Python script which sets up the SQLite database is found in {\field{\*\fldinst{HYPERLINK "https://github.com/maddietong/billswordcloud/blob/4561370e516205723a822edbe2495641aae9d535/Documents/import_csv.ipynb"}}{\fldrslt \cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 import_csv.ipynb}}\cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 .
\fs32 \cf4 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0  
\fs28 \cf2 \cb3 As mentioned previously, I used Python in Jupyter notebook to take the data from Shakespeare_data.csv and create a SQLite database called shakespeares_works.db. At this time, I also created a new column in the database called \'93searchname.\'94 This new column was created in order to ensure that user input for play titles could be matched precisely to play titles in the database, with no concern for capitalization or punctuation.\
\pard\tx720\pardeftab720\sl360\partightenfactor0

\fs32 \cf2 \
\pard\tx720\tx1440\pardeftab720\sl360\partightenfactor0

\fs28 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The second file that I used to create this project includes the user input piece, as\
well as the data visualization. This file is called {\field{\*\fldinst{HYPERLINK "https://github.com/maddietong/billswordcloud/blob/4561370e516205723a822edbe2495641aae9d535/Documents/select_and_double_check.ipynb"}}{\fldrslt \cf5 \cb6 \ul \ulc5 \strokec5 select_and_double_check.ipynb}}
\fs32 \
\pard\tx720\tx1440\pardeftab720\sl360\partightenfactor0

\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 This is the script that asks users for input as they choose their play and act. \

\f0\b \

\f1\b0 When a user inputs a play, the database is checked to ensure that the play exists, and if not, prompts them to try again. Likewise, when the user inputs an act, the database is checked to ensure that the act they\'92ve chosen exists in their play choice. Once the choices are made and accepted, the script connects to the database, searches for the words contained in the play/act combination that\'92s been provided. \
\
After removing certain \'93stop words,\'94 or words that are too common to be considered in a word cloud, the script populates a word cloud for the viewer to see. There were existing modern stop words that are imported into the file, and other Elizabethan stop words that I added (\'93thy, thee, etc.\'93)\
\
Using the wordcloud module, which uses Matplotlib and Python Imaging Library, I was able to generate a word cloud. Note: If you\'92re using a mac, you shouldn\'92t have a problem viewing the font. If you\'92re using any other platform, you may need to change the file extension of \'93font_path\'94 in the final kernel to .ttf.
\fs32 \
}